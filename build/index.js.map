{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/features/timer/constants.ts","webpack:///./src/features/timer/selectors.ts","webpack:///./src/features/timer/reducer.ts","webpack:///./src/features/timer/epics.ts","webpack:///./src/features/timer/actions.ts","webpack:///./src/features/entities/models.ts","webpack:///./src/features/entities/actions.ts","webpack:///./src/features/entities/constants.ts","webpack:///./src/features/entities/reducer.ts","webpack:///./src/store/reducer.ts","webpack:///./src/store/epics.ts","webpack:///./src/services/timer.ts","webpack:///./src/services/index.ts","webpack:///./src/store/store.ts","webpack:///./src/components/PlayButton.tsx","webpack:///./src/components/ToggleRunButton.tsx","webpack:///./src/util/time/components/FormattedTime.tsx","webpack:///./src/util/time/time.ts","webpack:///./src/components/TimeDisplay.tsx","webpack:///./src/components/ConnectedTimeDisplay.tsx","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","TOGGLE","getRunning","state","running","getTimeMs","time","getTimeSecs","getRate","rate","defaultState","epics","combineEpics","action$","store$","_ref","timer$","timer","pipe","takeUntil","operators","filter","index","switchMap","map","index_umd","actions_tick","defaultEntitiesContainerProps","resolve","entityType","entity","id","props","byId","ids","reducer_defaultState","reducer_handleCreate","_ref$payload","payload","ramda_es","assign","entities_reducer","arguments","undefined","action","type","_ref2","_ref2$payload","existing","reducer_handleUpdate","_ref3","_ref3$payload","reducer_handleDelete","store_reducer","redux","entities","store_epics","services","interval","timeProvider","performance","now","scheduler","animationFrame","observable_timer","pairwise","_slicedToArray","prev","epicMiddleware","createEpicMiddleware","dependencies","src_store_store","initialState","store","redux_devtools_extension","run","configureStore","components_PlayButton","onClick","react","ToggleRunButton","es","selectors_namespaceObject","dispatch","components_FormattedTime","format","time_formatDateFromNumber","formatStr","esm_format","Date","components_TimeDisplay","_ref$format","react_default","a","createElement","ConnectedTimeDisplay","src_App","root","document","getElementById","Component","react_dom","react_hot_loader","src_render"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([49,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const TICK = 'timer/TICK';\nexport const TOGGLE = 'timer/TOGGLE';\nexport const SET_RATE = 'timer/SET_RATE';\nexport const SET_TIME = 'timer/SET_TIME';\n","import { TimerState } from './reducer';\n\nexport const getRunning = (state: TimerState) => state.running;\nexport const getTimeMs = (state: TimerState) => state.time;\nexport const getTimeSecs = (state: TimerState) => state.time / 1000;\nexport const getRate = (state: TimerState) => state.rate;\n","import * as actions from './actions';\nimport { ActionType } from 'typesafe-actions';\nimport { TOGGLE, TICK, SET_RATE, SET_TIME } from './constants';\n\nexport type TimerAction = ActionType<typeof actions>;\n\nexport type TimerState = {\n  readonly time: number;\n  readonly rate: number;\n  readonly running: boolean;\n};\n\nexport const defaultState: TimerState = {\n  time: 0,\n  rate: 1,\n  running: false,\n};\n\nexport default (state: TimerState = defaultState, action: TimerAction) => {\n  switch (action.type) {\n    case TOGGLE:\n      return {\n        ...state,\n        running: !state.running,\n      };\n    case TICK:\n      return {\n        ...state,\n        time: state.time + state.rate * action.payload,\n      };\n    case SET_RATE:\n      return {\n        ...state,\n        rate: action.payload,\n      };\n    case SET_TIME:\n      return {\n        ...state,\n        time: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import Types from 'Types';\nimport { Epic, ofType, combineEpics } from 'redux-observable';\nimport { switchMap, map, takeUntil, filter } from 'rxjs/operators';\n\nimport { tick } from './actions';\nimport { TOGGLE } from './constants';\n\nconst INTERVAL = 10;\n\nexport const toggleFlow: Epic<\n  Types.RootAction,\n  Types.RootAction,\n  Types.RootState,\n  Types.Services\n> = (action$, store$, { timer }) => {\n  const timer$ = timer(INTERVAL).pipe(\n    takeUntil(\n      action$.pipe(\n        //Take times until next TOGGLE\n        ofType(TOGGLE),\n      ),\n    ),\n  );\n\n  return action$.pipe(\n    ofType(TOGGLE), //Take every TOGGLE action\n    filter((t, index) => index % 2 === 0), //Take every other action, the other is used to stop the timer (toggle).\n    switchMap(() => timer$), //Map to to the timer, keeps running until !state.timer.running\n    map(t => tick(t)), //Dispatch a TICK action with the current timer time.\n  );\n};\nexport default combineEpics(toggleFlow);\n","import { action } from 'typesafe-actions';\n\nimport { TOGGLE, TICK, SET_RATE, SET_TIME } from './constants';\n\nexport const toggle = () => action(TOGGLE);\nexport const tick = (time: number) => action(TICK, time);\nexport const setRate = (rate: number) => action(SET_RATE, rate);\nexport const setTime = (time: number) => action(SET_TIME, time);\n","export interface Entity {\n  id: string;\n  [key: string]: any;\n}\n\nexport interface EntitiesContainer {\n  byId: {\n    [key: string]: Entity;\n  };\n  ids: string[];\n}\n\nconst defaultEntitiesContainerProps: EntitiesContainer = {\n  byId: {},\n  ids: [],\n};\n\nexport const createEntitiesContainer = () => ({\n  ...defaultEntitiesContainerProps,\n});\n","import { createAction } from 'typesafe-actions';\nimport * as constants from './constants';\nimport { Entity } from './models';\n\nexport const createEntityAction = createAction(\n  constants.CREATE,\n  resolve => (entityType: string, entity: Entity) =>\n    resolve({\n      entityType,\n      entity,\n    }),\n);\n\nexport const updateEntityAction = createAction(\n  constants.UPDATE,\n  resolve => (entityType: string, id: string, props: {}) =>\n    resolve({\n      entityType,\n      id,\n      props,\n    }),\n);\n\nexport const deleteEntityAction = createAction(\n  constants.DELETE,\n  resolve => (entityType: string, id: string) =>\n    resolve({\n      entityType,\n      id,\n    }),\n);\n","export const CREATE = 'entities/CREATE';\nexport const UPDATE = 'entities/UPDATE';\nexport const DELETE = 'entities/DELETE';\n","import * as actions from './actions';\nimport { ActionType } from 'typesafe-actions';\nimport { EntitiesContainer, createEntitiesContainer } from './models';\nimport { CREATE, UPDATE, DELETE } from './constants';\nimport {\n  pipe,\n  unless,\n  has,\n  lensProp,\n  set,\n  lensPath,\n  over,\n  union,\n  when,\n  view,\n  dissoc,\n  without,\n} from 'ramda';\n\nexport type EntitiesAction = ActionType<typeof actions>;\ntype CreateAction = ActionType<typeof actions.createEntityAction>;\ntype UpdateAction = ActionType<typeof actions.updateEntityAction>;\ntype DeleteAction = ActionType<typeof actions.deleteEntityAction>;\n\nexport interface EntitiesState {\n  [key: string]: EntitiesContainer;\n}\nexport const defaultState: EntitiesState = {};\n\n/**\n * Handles entities/CREATE actions. Creates EntitiesContainer for entity type if it doesn't yet,\n * and then adds the new entity and its id to the list of ids.\n *\n * @param state Base state.\n * @param action entities/CREATE action to be handled.\n * @returns new state.\n */\nconst handleCreate = (state: EntitiesState, { payload: { entityType, entity } }: CreateAction) =>\n  pipe<EntitiesState, EntitiesState, EntitiesState, EntitiesState>(\n    unless(has(entityType), set(lensProp(entityType), createEntitiesContainer())),\n    set(lensPath([entityType, 'byId', entity.id]), entity),\n    over(lensPath([entityType, 'ids']), union([entity.id])),\n  )(state);\n\n/**\n * Handles entities/UPDATE actions. Updates (shallow merge) an entity with given id.\n * Returns input state if entity does not exist.\n *\n * @param state Base state.\n * @param action entities/UPDATE action to be handled.\n * @returns new state.\n */\nconst handleUpdate = (state: EntitiesState, { payload: { entityType, id, props } }: UpdateAction) =>\n  pipe<EntitiesState, EntitiesState>(\n    when(\n      view(lensPath([entityType, 'byId', id])),\n      over(lensPath([entityType, 'byId', id]), existing => ({ ...existing, ...props })),\n    ),\n  )(state);\n\n/**\n * Handles entities/DELETE actions. Deletes an entity with id.\n *\n * @param state Base state.\n * @param action Entities/DELETE action to be handled.\n */\nconst handleDelete = (state: EntitiesState, { payload: { entityType, id } }: DeleteAction) =>\n  pipe<EntitiesState, EntitiesState, EntitiesState>(\n    over(lensPath([entityType, 'byId']), dissoc(id)),\n    over(lensPath([entityType, 'ids']), without([id])),\n  )(state);\n\n/**\n * Handles and reduces actions into state.\n *\n * @param state The current state.\n * @param action The action to be handled.\n */\nconst reducer = (state: EntitiesState = defaultState, action: EntitiesAction) => {\n  switch (action.type) {\n    case CREATE:\n      return handleCreate(state, action);\n    case UPDATE:\n      return handleUpdate(state, action);\n    case DELETE:\n      return handleDelete(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { timerReducer } from 'features/timer';\nimport { entitiesReducer } from 'features/entities';\n\nconst reducer = combineReducers({\n  timer: timerReducer,\n  entities: entitiesReducer,\n});\n\nexport default reducer;\n","import { combineEpics } from 'redux-observable';\n\nimport { timerEpic } from '../features/timer';\n\nexport default combineEpics(timerEpic);\n","import { map, pairwise } from 'rxjs/operators';\nimport { timer, animationFrameScheduler, Scheduler } from 'rxjs';\n\nexport default (\n  interval: number,\n  timeProvider: (...args: any[]) => number = () => performance.now(),\n  scheduler: Scheduler = animationFrameScheduler,\n) =>\n  timer(0, interval, scheduler).pipe(\n    map(timeProvider), //Map the ticks from the to the value returned by the time provider.\n    pairwise(), //Group ticks into pairs, so we can calculate the difference.\n    map(([prev, curr]) => curr - prev), //Get time that has passed since last tick.\n  );\n","import timer from './timer';\nexport default {\n  timer,\n};\n","import Types from 'Types';\n\nimport { applyMiddleware, createStore } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducer';\nimport rootEpic from './epics';\nimport services from '../services';\n\nconst epicMiddleware = createEpicMiddleware<\n  Types.RootAction,\n  Types.RootAction,\n  Types.RootState,\n  Types.Services\n>({\n  dependencies: services,\n});\n\nfunction configureStore(initialState?: object) {\n  const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(epicMiddleware)));\n  epicMiddleware.run(rootEpic);\n  return store;\n}\n\nconst store = configureStore();\nexport default store;\n","import * as React from 'react';\n\ninterface IPlayButtonProps {\n  onClick: () => any;\n  running: boolean;\n}\n\nconst PlayButton: React.SFC<IPlayButtonProps> = ({ onClick, running }) => (\n  <button onClick={onClick}>{running ? 'Stop' : 'Start'}</button>\n);\n\nexport default PlayButton;\n","import Types from 'Types';\n\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { timerSelectors, TimerAction } from '../features/timer';\nimport { toggle } from '../features/timer/actions';\nimport PlayButton from './PlayButton';\n\nconst mapDispatchToProps = (dispatch: Dispatch<TimerAction>) => ({\n  onClick: () => dispatch(toggle()),\n});\n\nconst mapStateToProps = (state: Types.RootState) => ({\n  running: timerSelectors.getRunning(state.timer),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayButton);\n","import * as React from 'react';\nimport { formatDateFromNumber } from '../';\n\nexport interface IFormattedTimeProps {\n  time: number;\n  format: string;\n}\n\nconst FormattedTime: React.SFC<IFormattedTimeProps> = ({ time, format }) => (\n  <>{formatDateFromNumber(time, format)}</>\n);\n\nexport default FormattedTime;\n","import { format } from 'date-fns';\n\nexport const formatDateFromNumber = (n: number, formatStr: string) =>\n  format(new Date(n), formatStr);\n\nexport const formatDate = (n: Date, formatStr: string) => format(n, formatStr);\n","import React from 'react';\nimport { FormattedTime } from 'util/time';\n\ninterface ITimeDisplayProps {\n  time: number;\n  format?: string;\n}\n\nconst TimeDisplay: React.SFC<ITimeDisplayProps> = ({ time, format = 'HH:mm:ss.SSS' }) => {\n  return <FormattedTime time={time} format={format} />;\n};\n\nexport default TimeDisplay;\n","import Types from 'Types';\nimport { connect } from 'react-redux';\n\nimport { timerSelectors } from '../features/timer';\nimport TimeDisplay from './TimeDisplay';\n\nconst mapStateToProps = (state: Types.RootState) => ({\n  time: timerSelectors.getTimeMs(state.timer),\n});\n\nexport default connect(mapStateToProps)(TimeDisplay);\n","import * as React from 'react';\n\nimport ToggleRunButton from './components/ToggleRunButton';\nimport ConnectedTimeDisplay from './components/ConnectedTimeDisplay';\n\nconst App: React.SFC = () => (\n  <div>\n    <ToggleRunButton />\n    <ConnectedTimeDisplay />\n  </div>\n);\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\n\n// react deps\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport App from './App';\n\nconst root = document.getElementById('root');\n\nconst render = (Component: React.ComponentType) => {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store}>\n        <Component />\n      </Provider>\n    </AppContainer>,\n    root,\n  );\n};\n\nrender(App);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    render(App);\n  });\n}\n"],"sourceRoot":""}