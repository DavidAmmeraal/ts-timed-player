{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/features/timer/constants.ts","webpack:///./src/features/timer/actions.ts","webpack:///./src/features/timer/selectors.ts","webpack:///./src/features/timer/reducer.ts","webpack:///./src/features/timer/epics.ts","webpack:///./src/features/entities/actions.ts","webpack:///./src/features/entities/reducer.ts","webpack:///./src/store/reducer.ts","webpack:///./src/store/epics.ts","webpack:///./src/services/timer.ts","webpack:///./src/services/index.ts","webpack:///./src/store/configureStore.ts","webpack:///./src/components/StagePlayerLayout.tsx","webpack:///./src/components/StagePlayerError.tsx","webpack:///./src/util/time.ts","webpack:///./src/components/ConnectedTimeDisplay.tsx","webpack:///./src/components/TimeDisplay.tsx","webpack:///./src/components/ToggleRunButton.tsx","webpack:///./src/components/PlayButton.tsx","webpack:///./src/components/StagePlayer.tsx","webpack:///./src/util/fetch/HttpError.ts","webpack:///./src/util/fetch/httpErrorHandler.ts","webpack:///./src/fetchStage.ts","webpack:///./src/params.ts","webpack:///./src/util/fetch/fetchWithHttpErrorHandler.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","TOGGLE","actions_tick","time","index_umd","getRunning","state","running","getTimeMicro","getTimeMilli","getTimeSecs","getRate","rate","defaultState","epics","combineEpics","action$","store$","_ref","timer$","timer","pipe","takeUntil","operators","filter","index","switchMap","map","resolve","entityType","props","id","reducer_defaultState","store_reducer_reducer","redux","arguments","undefined","action","type","assign","payload","entities","_ref$payload","ramda_es","ids","byId","reducer_handleCreate","_ref2","_ref2$payload","existing","reducer_handleUpdate","_ref3","_ref3$payload","reducer_handleDelete","epics_epics","hrTimeProvider","Math","floor","performance","now","services","interval","timeProvider","scheduler","animationFrame","observable_timer","pairwise","_slicedToArray","prev","epicMiddleware","createEpicMiddleware","dependencies","StagePlayerLayout","styled_components_browser_esm","children","className","react","_templateObject","StagePlayerError_StagePlayerError","error","message","formatToTimerTime","Date","secondDecimals","h","parts","concat","padStart","ms","nDecimals","toString","split","join","formatToTimerTimeWithDecimals","ConnectedTimeDisplay","es","selectors_namespaceObject","ToggleRunButton","dispatch","onClick","StagePlayer_StagePlayer","_React$Component","StagePlayer","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","_this2","stage","then","setState","store","initialState","redux_devtools_extension","run","configureStore","catch","HttpError","_Error","response","HttpError_classCallCheck","HttpError_possibleConstructorReturn","HttpError_getPrototypeOf","code","status","url","statusText","HttpError_inherits","_wrapNativeSuper","Error","httpErrorHandler_httpErrorHandler","Promise","reject","fetchStage_fetchStage","str","location","search","parsed","query_string_default","a","parse","src_params","uri","params","fetch","fetchWithHttpErrorHandler_fetchWithHttpErrorHandler","json","GlobalStyle","App_templateObject","root","document","getElementById","Component","react_dom","react_hot_loader","src_render"],"mappings":"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","file":"index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([51,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * constants.ts\n * Constants for timer feature.\n */\nexport const TICK = 'timer/TICK';\nexport const TOGGLE = 'timer/TOGGLE';\nexport const SET_RATE = 'timer/SET_RATE';\nexport const SET_TIME = 'timer/SET_TIME';\nexport const TIMER_TICK_INTERVAL = 10;\n","/**\n * actions.ts\n * Action creators for timer.\n */\nimport { action } from 'typesafe-actions';\n\nimport { TOGGLE, TICK, SET_RATE, SET_TIME } from './constants';\n\nexport const toggle = () => action(TOGGLE);\nexport const tick = (time: number) => action(TICK, time);\nexport const setRate = (rate: number) => action(SET_RATE, rate);\n/**\n * Creates an SET_TIME time action.\n * @param time time in microseconds\n */\nexport const setTime = (time: number) => action(SET_TIME, time);\n","/**\n * selectors.ts\n * Selectors for timer epic.\n */\nimport { TimerState } from './reducer';\n\nexport const getRunning = (state: TimerState) => state.running;\nexport const getTimeMicro = (state: TimerState) => state.time;\nexport const getTimeMilli = (state: TimerState) => getTimeMicro(state) / 1000;\nexport const getTimeSecs = (state: TimerState) => getTimeMilli(state) / 1000;\nexport const getRate = (state: TimerState) => state.rate;\n","/**\n * reducer.ts\n * Reducer for timer feature.\n */\nimport * as actions from './actions';\nimport { ActionType } from 'typesafe-actions';\nimport { TOGGLE, TICK, SET_RATE, SET_TIME } from './constants';\n\nexport type TimerAction = ActionType<typeof actions>;\n\nexport type TimerState = {\n  readonly time: number;\n  readonly rate: number;\n  readonly running: boolean;\n};\n\nexport const defaultState: TimerState = {\n  time: 0,\n  rate: 1,\n  running: false,\n};\n\nexport const reducer = (state: TimerState = defaultState, action: TimerAction) => {\n  switch (action.type) {\n    case TOGGLE:\n      return {\n        ...state,\n        running: !state.running,\n      };\n    case TICK:\n      return {\n        ...state,\n        time: state.time + state.rate * action.payload,\n      };\n    case SET_RATE:\n      return {\n        ...state,\n        rate: action.payload,\n      };\n    case SET_TIME:\n      return {\n        ...state,\n        time: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/**\n * epics.ts\n * Epics for timer feature.\n */\nimport Types from 'Types';\nimport { Epic, ofType, combineEpics } from 'redux-observable';\nimport { switchMap, map, takeUntil, filter } from 'rxjs/operators';\n\nimport { tick } from './actions';\nimport { TOGGLE, TIMER_TICK_INTERVAL } from './constants';\n\nexport const toggleFlow: Epic<\n  Types.RootAction,\n  Types.RootAction,\n  Types.RootState,\n  Types.Services\n> = (action$, store$, { timer }) => {\n  const timer$ = timer(TIMER_TICK_INTERVAL).pipe(\n    takeUntil(\n      action$.pipe(\n        // Take times until next TOGGLE\n        ofType(TOGGLE),\n      ),\n    ),\n  );\n\n  return action$.pipe(\n    ofType(TOGGLE), // Take every TOGGLE action\n    filter((t, index) => index % 2 === 0), // Take every other action, the other is used to stop the timer (toggle).\n    switchMap(() => timer$), // Map to to the timer, keeps running until !state.timer.running\n    map(tick), // Dispatch a TICK action with the current timer time.\n  );\n};\n\nexport const epics = combineEpics(toggleFlow);\n","/**\n * actions.ts\n * Action creators for entities actions.\n */\nimport Types from 'Types';\nimport { createAction } from 'typesafe-actions';\n\nexport const createEntityAction = createAction(\n  'entities/CREATE_ENTITY',\n  resolve => (entityType: string, props: Types.EntityProps) =>\n    resolve({\n      entityType,\n      props,\n    }),\n);\n\nexport const updateEntityAction = createAction(\n  'entities/UPDATE_ENTITY',\n  resolve => (entityType: string, props: Types.EntityProps) =>\n    resolve({\n      entityType,\n      props,\n    }),\n);\n\nexport const deleteEntityAction = createAction(\n  'entities/DELETE_ENTITY',\n  resolve => (entityType: string, id: string) =>\n    resolve({\n      entityType,\n      id,\n    }),\n);\n","/**\n * reducer.ts\n * Handles the entities actions.\n */\nimport Types from 'Types';\nimport { ActionType } from 'typesafe-actions';\nimport {\n  pipe,\n  unless,\n  has,\n  lensProp,\n  set,\n  lensPath,\n  over,\n  union,\n  when,\n  view,\n  dissoc,\n  without,\n} from 'ramda';\nimport * as actions from './actions';\n\nexport type EntitiesAction = ActionType<typeof actions>;\n\ntype CreateAction = ActionType<typeof actions.createEntityAction>;\ntype UpdateAction = ActionType<typeof actions.updateEntityAction>;\ntype DeleteAction = ActionType<typeof actions.deleteEntityAction>;\n\nexport type EntitiesState = {\n  [key: string]: EntitiesContainer;\n};\n\nexport type EntitiesContainer = {\n  ids: string[];\n  byId: {\n    [key: string]: Types.EntityProps;\n  };\n};\n\nexport const defaultState: EntitiesState = {};\nconst createEntitiesContainer = (): EntitiesContainer => ({\n  ids: [],\n  byId: {},\n});\n\n/**\n * Handles entities/CREATE actions. Creates EntitiesContainer for entity type if it doesn't yet,\n * and then adds the new entity and its id to the list of ids.\n *\n * @param state Base state.\n * @param action entities/CREATE action to be handled.\n * @returns new state.\n */\nconst handleCreate = (state: EntitiesState, { payload: { entityType, props } }: CreateAction) =>\n  pipe<EntitiesState, EntitiesState, EntitiesState, EntitiesState>(\n    unless(has(entityType), set(lensProp(entityType), createEntitiesContainer())),\n    set(lensPath([entityType, 'byId', props.id]), props),\n    over(lensPath([entityType, 'ids']), union([props.id])),\n  )(state);\n\n/**\n * Handles entities/UPDATE actions. Updates (shallow merge) an entity with given id.\n * Returns input state if entity does not exist.\n *\n * @param state Base state.\n * @param action entities/UPDATE action to be handled.\n * @returns new state.\n */\nconst handleUpdate = (state: EntitiesState, { payload: { entityType, props } }: UpdateAction) =>\n  pipe<EntitiesState, EntitiesState>(\n    when(\n      view(lensPath([entityType, 'byId', props.id])),\n      over(lensPath([entityType, 'byId', props.id]), existing => ({ ...existing, ...props })),\n    ),\n  )(state);\n\n/**\n * Handles entities/DELETE actions. Deletes an entity with id.\n *\n * @param state Base state.\n * @param action Entities/DELETE action to be handled.\n */\nconst handleDelete = (state: EntitiesState, { payload: { entityType, id } }: DeleteAction) =>\n  pipe<EntitiesState, EntitiesState, EntitiesState>(\n    over(lensPath([entityType, 'byId']), dissoc(id)),\n    over(lensPath([entityType, 'ids']), without([id])),\n  )(state);\n\n/**\n * Handles and reduces actions into state.\n *\n * @param state The current state.\n * @param action The action to be handled.\n */\nexport const reducer = (state: EntitiesState = defaultState, action: Types.RootAction) => {\n  switch (action.type) {\n    case 'entities/CREATE_ENTITY':\n      return handleCreate(state, action);\n    case 'entities/UPDATE_ENTITY':\n      return handleUpdate(state, action);\n    case 'entities/DELETE_ENTITY':\n      return handleDelete(state, action);\n    default:\n      return state;\n  }\n};\n","/**\n * reducer.ts\n * Store reducer.\n */\nimport { combineReducers } from 'redux';\nimport { timerReducer } from '../features/timer';\nimport { entitiesReducer } from '../features/entities';\n\nexport const reducer = combineReducers({\n  timer: timerReducer,\n  entities: entitiesReducer,\n});\n","/**\n * epics.ts\n * Epics for store.\n */\nimport { combineEpics } from 'redux-observable';\n\nimport { timerEpic } from '../features/timer';\n\nexport const epics = combineEpics(timerEpic);\n","/**\n * timer.ts\n * Timer service.\n */\nimport { map, pairwise } from 'rxjs/operators';\nimport { timer as timerRxjs, animationFrameScheduler, Scheduler } from 'rxjs';\n\nconst hrTimeProvider = () => Math.floor(performance.now() * 1000);\n\nexport const timer = (\n  interval: number,\n  timeProvider: (...args: any[]) => number = hrTimeProvider,\n  scheduler: Scheduler = animationFrameScheduler,\n) =>\n  timerRxjs(0, interval, scheduler).pipe(\n    map(timeProvider), // Map the ticks from the to the value returned by the time provider.\n    pairwise(), // Group ticks into pairs, so we can calculate the difference.\n    map(([prev, curr]) => curr - prev), // Get time that has passed since last tick.\n  );\n","/**\n * index.ts\n * services module exports.\n */\nimport { timer } from './timer';\n\nexport const index = { timer };\nexport const services = index;\n","/**\n * store.ts\n * Store for StagePlayer\n */\nimport Types from 'Types';\n\nimport { applyMiddleware, createStore, Store } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer as rootReducer } from './reducer';\nimport { epics as rootEpic } from './epics';\nimport { services } from '../services/index';\n\nconst epicMiddleware = createEpicMiddleware<\n  Types.RootAction,\n  Types.RootAction,\n  Types.RootState,\n  Types.Services\n>({\n  dependencies: services,\n});\n\nexport function configureStore(initialState: {}): Store<Types.RootState> {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(epicMiddleware)),\n  );\n  epicMiddleware.run(rootEpic);\n  return store;\n}\n","/**\n * StagePlayerLayout.tsx\n * Renders the layout of the StagePlayer\n */\nimport * as React from 'react';\nimport styledComponents from 'styled-components';\n\ninterface StagePlayerLayoutProps {\n  className?: string;\n}\n\nconst component: React.SFC<StagePlayerLayoutProps> = ({ children, className }) => (\n  <section className={className}>\n    <div>{children}</div>\n  </section>\n);\n\nexport const StagePlayerLayout = styledComponents(component)`\n  background-color: white;\n`;\n","/**\n * StagePlayerError.tsx\n * Displays an error.\n */\nimport * as React from 'react';\ninterface StagePlayerErrorProps {\n  error: Error;\n}\n\nexport const StagePlayerError: React.SFC<StagePlayerErrorProps> = ({ error }) => (\n  <span>Error = {error.message}</span>\n);\n","/**\n * time.ts\n * Time utils.\n */\nimport { curry } from 'ramda';\nconst msInHour = 3.6e6;\nconst msInMinute = 60000;\nconst msInS = 1000;\n\nconst offsetBase = new Date();\n\nexport const getOffset = (date = offsetBase) => {\n  return date.getTimezoneOffset() * 60000;\n};\n\nconst formatToTimerTimeWithDecimals = curry(\n  ({ secondDecimals }: { secondDecimals: number }, n: number) => {\n    const h = Math.floor(n / msInHour);\n    const m = Math.floor((n - h * msInHour) / msInMinute);\n    const s = Math.floor((n - h * msInHour - m * msInMinute) / msInS);\n\n    const parts = [\n      `${h}`.padStart(2, '0').slice(-2),\n      ':',\n      `${m}`.padStart(2, '0'),\n      ':',\n      `${s}`.padStart(2, '0'),\n    ];\n\n    if (secondDecimals > 0) {\n      const ms = Math.floor(n % 1000);\n      parts.push('.');\n      parts.push(`${ms}`.padStart(3, '0').slice(0, secondDecimals));\n      if (secondDecimals > 3) {\n        const nDecimals = Math.floor(n) !== n ? n.toString().split('.')[1] : 0;\n        parts.push(`${nDecimals}`.slice(0, secondDecimals - 3));\n      }\n    }\n    return parts.join('');\n  },\n);\n\nexport const formatToTimerTime = formatToTimerTimeWithDecimals({ secondDecimals: 3 });\n","/**\n * ConnectedTimeDisplay.tsx\n * Connects TimeDisplay to the redux store.\n */\nimport Types from 'Types';\nimport { connect } from 'react-redux';\n\nimport { timerSelectors } from '../features/timer';\nimport { TimeDisplay } from './TimeDisplay';\n\nconst mapStateToProps = (state: Types.RootState) => ({\n  time: timerSelectors.getTimeMilli(state.timer),\n});\n\nexport const ConnectedTimeDisplay = connect(mapStateToProps)(TimeDisplay);\n","/**\n * TimeDisplay.tsx\n * Displays a time specified in ms into the format of HH:MM:SS.SSS.\n */\nimport * as React from 'react';\nimport { formatToTimerTime } from '~/util/time';\n\ninterface ITimeDisplayProps {\n  time: number;\n}\n\nexport const TimeDisplay: React.SFC<ITimeDisplayProps> = ({ time }) => (\n  <>{formatToTimerTime(time)}</>\n);\n","/**\n * ToggleRunButton.tsx\n */\nimport Types from 'Types';\n\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { timerSelectors, TimerAction } from '../features/timer';\nimport { toggle } from '../features/timer/actions';\nimport { PlayButton } from './PlayButton';\n\nconst mapDispatchToProps = (dispatch: Dispatch<TimerAction>) => ({\n  onClick: () => dispatch(toggle()),\n});\n\nconst mapStateToProps = (state: Types.RootState) => ({\n  running: timerSelectors.getRunning(state.timer),\n});\n\nexport const ToggleRunButton = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlayButton);\n","/**\n * PlayButton.tsx\n * Displays a playbutton.\n */\nimport * as React from 'react';\n\ninterface IPlayButtonProps {\n  onClick: () => any;\n  running: boolean;\n}\n\nexport const PlayButton: React.SFC<IPlayButtonProps> = ({ onClick, running }) => (\n  <button onClick={onClick}>{running ? 'Stop' : 'Start'}</button>\n);\n","/**\n * StagePlayer.tsx\n * The StagePlayer component.\n */\nimport * as React from 'react';\n\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store/configureStore';\n\nimport { StagePlayerLayout } from './StagePlayerLayout';\nimport { StagePlayerError } from './StagePlayerError';\nimport { ConnectedTimeDisplay } from './ConnectedTimeDisplay';\nimport { ToggleRunButton } from './ToggleRunButton';\n\ninterface IStagePlayerProps {\n  stage: () => Promise<{}>;\n}\n\ninterface IStagePlayerState {\n  store?: Store<any>;\n  error?: Error;\n}\n\nexport class StagePlayer extends React.Component<IStagePlayerProps, IStagePlayerState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props\n      .stage()\n      .then(stage => {\n        this.setState({\n          store: configureStore(stage),\n        });\n      })\n      .catch(error => this.setState({ error }));\n  }\n\n  render() {\n    if (this.state.error) {\n      return <StagePlayerError error={this.state.error} />;\n    }\n\n    if (this.state.store) {\n      return (\n        <Provider store={this.state.store}>\n          <StagePlayerLayout {...this.props}>\n            <ConnectedTimeDisplay />\n            <ToggleRunButton />\n          </StagePlayerLayout>\n        </Provider>\n      );\n    }\n    return <span>LOADING</span>;\n  }\n}\n","/**\n * HttpError.ts\n */\n\nexport interface IHttpError extends Error {\n  response: Response;\n  code: number;\n  name: string;\n}\n\nexport class HttpError extends Error implements IHttpError {\n  response: Response;\n\n  code: number;\n\n  constructor(response: Response) {\n    super();\n    this.name = 'HttpError';\n    this.response = response;\n    this.code = response.status;\n    this.message = `${response.status} - ${response.url}: ${response.statusText}`;\n  }\n}\n","/**\n * httpErrorHandler.ts\n */\n\nimport { HttpError } from './HttpError';\n\nexport const httpErrorHandler = (r: Response): Promise<Response> => {\n  if (r.status >= 200 && r.status < 300) {\n    return Promise.resolve(r);\n  }\n  return Promise.reject(new HttpError(r));\n};\n","/**\n * fetch-stage.ts\n */\n\nimport params from './params';\nimport { fetchWithHttpErrorHandler } from './util/fetch/fetchWithHttpErrorHandler';\n\nexport const fetchStage = () =>\n  new Promise((resolve, reject) => {\n    const stage = params().stage;\n    if (!stage) {\n      reject(new Error('No stage specified'));\n    } else {\n      fetchWithHttpErrorHandler(stage)\n        .then(response => response.json())\n        .then(result => resolve({ ...result }));\n    }\n  });\n","import queryString from 'query-string';\n\nexport interface AppParams {\n  stage?: string;\n}\n\nexport default (str = location.search) => {\n  const defaultParams: AppParams = {\n    stage: process.env.DEFAULT_STAGE,\n  };\n  const parsed = queryString.parse(str);\n  return {\n    ...defaultParams,\n    ...parsed,\n  };\n};\n","/**\n * fetch.ts\n * fetching utils.\n */\n\nimport { httpErrorHandler } from './httpErrorHandler';\n\nexport const fetchWithHttpErrorHandler = (uri: string, params?: {}) =>\n  fetch(uri, params).then(httpErrorHandler);\n","/**\n * App.tsx\n */\nimport * as React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { StagePlayer } from './components/StagePlayer';\nimport { fetchStage } from './fetchStage';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }`;\n\nexport const App: React.SFC = () => (\n  <StagePlayer stage={fetchStage}>\n    <GlobalStyle />\n    <span>A stageplayer child!</span>\n  </StagePlayer>\n);\n","/**\n * index.tsx\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\n\nimport { App } from './App';\n\nconst root = document.getElementById('root');\n\nconst render = (Component: React.ComponentType) => {\n  ReactDOM.render(\n    <AppContainer>\n      <Component />\n    </AppContainer>,\n    root,\n  );\n};\n\nrender(App);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    render(App);\n  });\n}\n"],"sourceRoot":""}